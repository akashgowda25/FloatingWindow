using System;

using Android.App;

using Android.Content;

using Android.Graphics;

using Android.OS;

using Android.Runtime;

using Android.Views;

using Xamarin.Forms;

using Xamarin.Forms.Platform.Android;

[assembly: ExportRenderer(typeof(FloatingTimeWidget), typeof(FloatingTimeWidgetRenderer))]

namespace YourProjectNamespace.Droid

{

    public class FloatingTimeWidgetRenderer : ViewRenderer<FloatingTimeWidget, FrameLayout>

    {

        WindowManagerLayoutParams _layoutParams;

        WindowManager _windowManager;

        FrameLayout _floatingView;

        public FloatingTimeWidgetRenderer(Context context) : base(context)

        {

            AutoPackage = false;

        }

        protected override void OnElementChanged(ElementChangedEventArgs<FloatingTimeWidget> e)

        {

            base.OnElementChanged(e);

            if (Control == null)

            {

                _windowManager = Android.App.Application.Context.GetSystemService(Context.WindowService).JavaCast<WindowManager>();

                _layoutParams = new WindowManagerLayoutParams(

                    WindowManagerLayoutParams.WrapContent,

                    WindowManagerLayoutParams.WrapContent,

                    WindowManagerTypes.ApplicationOverlay,

                    WindowManagerFlags.NotFocusable,

                    Format.Translucent);

                _layoutParams.Gravity = GravityFlags.Top | GravityFlags.Start;

                _layoutParams.X = 0;

                _layoutParams.Y = 0;

                _floatingView = new FrameLayout(Context);

                _floatingView.SetBackgroundColor(Element.BackgroundColor.ToAndroid());

                _floatingView.LayoutParameters = new ViewGroup.LayoutParams(

                    ViewGroup.LayoutParams.WrapContent, ViewGroup.LayoutParams.WrapContent);

                TextView textView = new TextView(Context);

                textView.Text = DateTime.Now.ToString("HH:mm");

                textView.TextSize = 16;

                textView.SetTextColor(Element.TextColor.ToAndroid());

                textView.Gravity = GravityFlags.Center;

                _floatingView.AddView(textView);

                SetNativeControl(_floatingView);

            }

        }

        protected override void Dispose(bool disposing)

        {

            if (disposing)

            {

                _floatingView?.RemoveFromParent();

                _floatingView?.Dispose();

                _floatingView = null;

                _windowManager?.RemoveViewImmediate(Control);

                _windowManager = null;

                _layoutParams = null;

            }

            base.Dispose(disposing);

        }

    }

}

